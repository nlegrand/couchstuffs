#!/usr/bin/env python

import os, json, base64, subprocess, sys, mimetypes, httplib, re


file = sys.argv.pop()
#file_prefix = re.sub('-.*', '', os.path.splitext(file)[0])
id = sys.argv.pop()

data = {}

print 'title ({"lang":"title", ...}):'
data['title'] = json.loads(sys.stdin.readline())

print 'tags ({"lang":["tag1","tag2",...], ...}):'
data['tags'] = json.loads(sys.stdin.readline())

#don't want portrait thumbnail to be greater than paysage
geometry = os.popen("identify -format \"%w %h\" " + file).read().replace("\n","").split(" ")
if geometry[0] > geometry[1]:
    thumbgeometry = "100"
else:
    thumbgeometry = "x75"
    

os.system("/usr/local/bin/convert -size " + thumbgeometry + " " + file 
          + " -thumbnail " + thumbgeometry + " " + id + "-thumbnail.jpg")
os.system("/usr/local/bin/convert -size 250 " + file + " -thumbnail 250 " + id + "-small.jpg")
os.system("/usr/local/bin/convert -size 500 " + file + " -thumbnail 500 " + id + "-medium.jpg")
os.system("/usr/local/bin/convert -size 1024 " + file + " -thumbnail 1024 " + id + "-large.jpg")
os.system("/usr/local/bin/convert -size 2048 " + file + " -thumbnail 2048 " + id + "-huge.jpg")

data['_attachments'] = {
    id + "-original.jpg" : {
        "content_type" : mimetypes.guess_type(file)[0],
        "data" : base64.b64encode(open(file, 'rb').read()),
        },
    id + "-thumbnail.jpg" : {
        "content_type" : mimetypes.guess_type(id + "-thumbnail.jpg")[0],
        "data" : base64.b64encode(open(id + "-thumbnail.jpg", 'rb').read()),
        },
    id + "-small.jpg" : {
        "content_type" : mimetypes.guess_type(id + "-small.jpg")[0],
        "data" : base64.b64encode(open(id + "-small.jpg", 'rb').read()),
        },
    id + "-medium.jpg" : {
        "content_type" : mimetypes.guess_type(id + "-medium.jpg")[0],
        "data" : base64.b64encode(open(id + "-medium.jpg", 'rb').read()),
        },
    id + "-large.jpg" : {
        "content_type" : mimetypes.guess_type(id + "-large.jpg")[0],
        "data" : base64.b64encode(open(id + "-large.jpg", 'rb').read()),
        },
    id + "-huge.jpg" : {
        "content_type" : mimetypes.guess_type(id + "-huge.jpg")[0],
        "data" : base64.b64encode(open(id + "-huge.jpg", 'rb').read()),
        },
    }


conn = httplib.HTTPConnection("localhost:5984")
conn.request("PUT","/images/" + id,
             json.dumps(data), {"Content-type": "application/json"})
r1 = conn.getresponse()

print r1.status, r1.reason
print r1.read()

